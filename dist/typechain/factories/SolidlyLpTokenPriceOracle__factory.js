"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SolidlyLpTokenPriceOracle__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        type: "constructor",
        inputs: [
            {
                name: "_wtoken",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_sqrt4k",
        inputs: [
            {
                name: "r0",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "r1",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "t_s",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "pure",
    },
    {
        type: "function",
        name: "price",
        inputs: [
            {
                name: "underlying",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "wtoken",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class SolidlyLpTokenPriceOracle__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_wtoken, overrides) {
        return super.deploy(_wtoken, overrides || {});
    }
    getDeployTransaction(_wtoken, overrides) {
        return super.getDeployTransaction(_wtoken, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static bytecode = _bytecode;
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SolidlyLpTokenPriceOracle__factory = SolidlyLpTokenPriceOracle__factory;
