/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, utils } from "ethers";
const _abi = [
    {
        type: "function",
        name: "_listExtensions",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "_registerExtension",
        inputs: [
            {
                name: "extensionToAdd",
                type: "address",
                internalType: "contract DiamondExtension",
            },
            {
                name: "extensionToReplace",
                type: "address",
                internalType: "contract DiamondExtension",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_replaceExtensions",
        inputs: [
            {
                name: "extensions",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_setIonicPairWhitelisted",
        inputs: [
            {
                name: "_collateralMarket",
                type: "address",
                internalType: "contract IonicCErc20",
            },
            {
                name: "_stableMarket",
                type: "address",
                internalType: "contract IonicCErc20",
            },
            {
                name: "_whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "_setPairWhitelisted",
        inputs: [
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_whitelisted",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "closeAndRemoveUserPosition",
        inputs: [
            {
                name: "position",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createAavePosition",
        inputs: [
            {
                name: "user",
                type: "address",
                internalType: "address",
            },
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_isShort",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createAndFundDelegatedPosition",
        inputs: [
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_collateralVault",
                type: "address",
                internalType: "address",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_isShort",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "_fundingAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_fundingAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createAndFundDelegatedPositionAtRatio",
        inputs: [
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_collateralVault",
                type: "address",
                internalType: "address",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_isShort",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "_fundingAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_fundingAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_leverageRatio",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createAndFundIonicPosition",
        inputs: [
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_isShort",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "_fundingAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_fundingAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createAndFundIonicPositionAtRatio",
        inputs: [
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_isShort",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "_fundingAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_fundingAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_leverageRatio",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createAndFundPosition",
        inputs: [
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_collateralVault",
                type: "address",
                internalType: "address",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_isShort",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "_fundingAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_fundingAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createAndFundPositionAtRatio",
        inputs: [
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_collateralVault",
                type: "address",
                internalType: "address",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_isShort",
                type: "bool",
                internalType: "bool",
            },
            {
                name: "_fundingAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_fundingAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "_leverageRatio",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createDelegatedPosition",
        inputs: [
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_collateralVault",
                type: "address",
                internalType: "address",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_isShort",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createIonicPosition",
        inputs: [
            {
                name: "posOwner",
                type: "address",
                internalType: "address",
            },
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "_isShort",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "createPosition",
        inputs: [
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_collateralVault",
                type: "address",
                internalType: "address",
            },
            {
                name: "_stableAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "_isShort",
                type: "bool",
                internalType: "bool",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "creditDelegator",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract ICreditDelegator",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "deregisterVault",
        inputs: [
            {
                name: "vault",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "flashloanRouter",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IFlashloanRouter",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "fundPosition",
        inputs: [
            {
                name: "position",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
            {
                name: "fundingAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "amount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "fundersRegistry",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract IFundersRegistry",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getAccountsWithOpenPositions",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getAssetBorrowRate",
        inputs: [
            {
                name: "asset",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getAssetPrice",
        inputs: [
            {
                name: "asset",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getBorrowableMarketsByCollateral",
        inputs: [
            {
                name: "_collateralAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getBorrowedPriceOnPositionCreated",
        inputs: [
            {
                name: "positionAddress",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getCollateralPriceOnPositionCreated",
        inputs: [
            {
                name: "positionAddress",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getLeverageRatioAfterBorrow",
        inputs: [
            {
                name: "collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "borrowedAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "newBorrowsAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "positionSupplyAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "positionBorrowAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "r",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getLeverageRatioAfterRepay",
        inputs: [
            {
                name: "collateralAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "borrowedAsset",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "repaidBorrowsAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "positionSupplyAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "positionBorrowAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "r",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getLiquidationThreshold",
        inputs: [
            {
                name: "collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "collateralAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "borrowedAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "leverageRatio",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getMinBorrowNative",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getNondelegatedMaxLeverageRatio",
        inputs: [
            {
                name: "collateralAsset",
                type: "address",
                internalType: "address",
            },
            {
                name: "collateralAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "borrowedAsset",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "maxLeverageRatio",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionsByAccount",
        inputs: [
            {
                name: "account",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]",
            },
            {
                name: "",
                type: "bool[]",
                internalType: "bool[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionsExtension",
        inputs: [
            {
                name: "msgSig",
                type: "bytes4",
                internalType: "bytes4",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPositionsTotalCollateralValue",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getRegisteredVaults",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getWhitelistedCollateralMarkets",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address[]",
                internalType: "address[]",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "initialize",
        inputs: [
            {
                name: "_delegator",
                type: "address",
                internalType: "contract ICreditDelegator",
            },
            {
                name: "_oracle",
                type: "address",
                internalType: "contract MasterPriceOracle",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "isFactoryPosition",
        inputs: [
            {
                name: "position",
                type: "address",
                internalType: "contract LeveragedPosition",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "isVaultRegistered",
        inputs: [
            {
                name: "vault",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "minBorrowNative",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "oracle",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "contract MasterPriceOracle",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "owner",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "registerVault",
        inputs: [
            {
                name: "vault",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "reinitialize",
        inputs: [
            {
                name: "_oracle",
                type: "address",
                internalType: "contract MasterPriceOracle",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "removeClosedPosition",
        inputs: [
            {
                name: "closedPosition",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "removed",
                type: "bool",
                internalType: "bool",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "swap",
        inputs: [
            {
                name: "inputToken",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
            {
                name: "inputAmount",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "outputToken",
                type: "address",
                internalType: "contract IERC20Upgradeable",
            },
        ],
        outputs: [
            {
                name: "outputAmount",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "vaultOfPosition",
        inputs: [
            {
                name: "position",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "event",
        name: "PositionCreated",
        inputs: [
            {
                name: "user",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "position",
                type: "address",
                indexed: false,
                internalType: "contract LeveragedPosition",
            },
            {
                name: "collateral",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "stable",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "lendingProtocol",
                type: "uint16",
                indexed: false,
                internalType: "uint16",
            },
        ],
        anonymous: false,
    },
];
export class ILeveragedPositionsFactory__factory {
    static abi = _abi;
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
