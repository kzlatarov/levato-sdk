"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ISwapRouter__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        type: "function",
        name: "exactInput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct ISwapRouter.ExactInputParams",
                components: [
                    {
                        name: "path",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "recipient",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountIn",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMinimum",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "amountOut",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "exactInputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct ISwapRouter.ExactInputSingleParams",
                components: [
                    {
                        name: "tokenIn",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "tokenOut",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fee",
                        type: "uint24",
                        internalType: "uint24",
                    },
                    {
                        name: "recipient",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "amountIn",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMinimum",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "sqrtPriceLimitX96",
                        type: "uint160",
                        internalType: "uint160",
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "amountOut",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "exactInputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct ISwapRouter.ExactInputSingleParamsWithDeadline",
                components: [
                    {
                        name: "tokenIn",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "tokenOut",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fee",
                        type: "uint24",
                        internalType: "uint24",
                    },
                    {
                        name: "recipient",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountIn",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOutMinimum",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "sqrtPriceLimitX96",
                        type: "uint160",
                        internalType: "uint160",
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "amountOut",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "payable",
    },
    {
        type: "function",
        name: "exactOutput",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct ISwapRouter.ExactOutputParams",
                components: [
                    {
                        name: "path",
                        type: "bytes",
                        internalType: "bytes",
                    },
                    {
                        name: "recipient",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOut",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountInMaximum",
                        type: "uint256",
                        internalType: "uint256",
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "amountIn",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "exactOutputSingle",
        inputs: [
            {
                name: "params",
                type: "tuple",
                internalType: "struct ISwapRouter.ExactOutputSingleParams",
                components: [
                    {
                        name: "tokenIn",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "tokenOut",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "fee",
                        type: "uint24",
                        internalType: "uint24",
                    },
                    {
                        name: "recipient",
                        type: "address",
                        internalType: "address",
                    },
                    {
                        name: "deadline",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountOut",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "amountInMaximum",
                        type: "uint256",
                        internalType: "uint256",
                    },
                    {
                        name: "sqrtPriceLimitX96",
                        type: "uint160",
                        internalType: "uint160",
                    },
                ],
            },
        ],
        outputs: [
            {
                name: "amountIn",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "factory",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "multicall",
        inputs: [
            {
                name: "deadline",
                type: "uint256",
                internalType: "uint256",
            },
            {
                name: "data",
                type: "bytes[]",
                internalType: "bytes[]",
            },
        ],
        outputs: [
            {
                name: "",
                type: "bytes[]",
                internalType: "bytes[]",
            },
        ],
        stateMutability: "payable",
    },
];
class ISwapRouter__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ISwapRouter__factory = ISwapRouter__factory;
