"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IFundersRegistry__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "WNATIVE",
        outputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "_listExtensions",
        outputs: [
            {
                internalType: "address[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract DiamondExtension",
                name: "extensionToAdd",
                type: "address",
            },
            {
                internalType: "contract DiamondExtension",
                name: "extensionToReplace",
                type: "address",
            },
        ],
        name: "_registerExtension",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IFundingStrategy",
                name: "strategy",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "_removeFundingStrategyForPair",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address[]",
                name: "extensions",
                type: "address[]",
            },
        ],
        name: "_replaceExtensions",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "pool",
                type: "address",
            },
        ],
        name: "_setBalancerPoolForTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable[]",
                name: "bestPath",
                type: "address[]",
            },
        ],
        name: "_setBestSwapPath",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IFundingStrategy",
                name: "strategy",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "_setFundingStrategy",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
            {
                internalType: "uint24",
                name: "fee",
                type: "uint24",
            },
        ],
        name: "_setUniV3PoolFee",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "inputAmount",
                type: "uint256",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "amountOutAndSlippageOfSwap",
        outputs: [
            {
                internalType: "uint256",
                name: "outputAmount",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "balancerPoolForTokens",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "bestSwapPath",
        outputs: [
            {
                internalType: "contract IERC20Upgradeable[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "customUniV3Router",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
        ],
        name: "defaultOutputToken",
        outputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
        ],
        name: "fundingStrategiesByName",
        outputs: [
            {
                internalType: "contract IFundingStrategy",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "fundingStrategiesByTokens",
        outputs: [
            {
                internalType: "contract IFundingStrategy",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "getBestSwapPath",
        outputs: [
            {
                internalType: "contract IERC20Upgradeable[]",
                name: "",
                type: "address[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "getFundingStrategies",
        outputs: [
            {
                internalType: "contract IFundingStrategy[]",
                name: "strategies",
                type: "address[]",
            },
            {
                internalType: "bytes[]",
                name: "strategiesData",
                type: "bytes[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "getFundingStrategy",
        outputs: [
            {
                internalType: "contract IFundingStrategy",
                name: "strategy",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "strategyData",
                type: "bytes",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "getSlippage",
        outputs: [
            {
                internalType: "uint256",
                name: "slippage",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "_wnative",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract ICreditDelegator",
                name: "_creditDelegator",
                type: "address",
            },
        ],
        name: "reinitialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "inputToken",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "inputAmount",
                type: "uint256",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "outputToken",
                type: "address",
            },
        ],
        name: "swap",
        outputs: [
            {
                internalType: "uint256",
                name: "outputAmount",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "uniswapV3Fees",
        outputs: [
            {
                internalType: "uint24",
                name: "",
                type: "uint24",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IFundersRegistry__factory {
    static abi = _abi;
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.IFundersRegistry__factory = IFundersRegistry__factory;
