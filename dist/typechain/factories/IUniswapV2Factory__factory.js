/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Contract, utils } from "ethers";
const _abi = [
    {
        type: "function",
        name: "allPairs",
        inputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        outputs: [
            {
                name: "pair",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "allPairsLength",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "uint256",
                internalType: "uint256",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "createPair",
        inputs: [
            {
                name: "tokenA",
                type: "address",
                internalType: "address",
            },
            {
                name: "tokenB",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "pair",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "feeTo",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "feeToSetter",
        inputs: [],
        outputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "getPair",
        inputs: [
            {
                name: "tokenA",
                type: "address",
                internalType: "address",
            },
            {
                name: "tokenB",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [
            {
                name: "pair",
                type: "address",
                internalType: "address",
            },
        ],
        stateMutability: "view",
    },
    {
        type: "function",
        name: "setFeeTo",
        inputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "function",
        name: "setFeeToSetter",
        inputs: [
            {
                name: "",
                type: "address",
                internalType: "address",
            },
        ],
        outputs: [],
        stateMutability: "nonpayable",
    },
    {
        type: "event",
        name: "PairCreated",
        inputs: [
            {
                name: "token0",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "token1",
                type: "address",
                indexed: true,
                internalType: "address",
            },
            {
                name: "pair",
                type: "address",
                indexed: false,
                internalType: "address",
            },
            {
                name: "",
                type: "uint256",
                indexed: false,
                internalType: "uint256",
            },
        ],
        anonymous: false,
    },
];
export class IUniswapV2Factory__factory {
    static createInterface() {
        return new utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new Contract(address, _abi, signerOrProvider);
    }
}
IUniswapV2Factory__factory.abi = _abi;
